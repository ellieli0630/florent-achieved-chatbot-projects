[
{
	"comment":"create new event owner with phone 1-234-567-8901 named 'John Smith' ",
	"conditions": {
		"intent": "statement",
		"verbs":["create"],
		"objects":["owner"],
		"match":["$Phone <- graph_data['phone']","$Name <- graph_data['quote']"]
	},
	"action": ["$Node <- Node(main_graph,{'type':'owner','name':'$Name','phone':'$Phone'})","$ID <- action_vars['$Node']['id']"],
	"answer": "Created new event owner $Name with phone $Phone and id = $ID "

},

{       "comment":"create new event named 'Great Music Event' that will be held at 11-06-2016  10:00 am to 12:00 am",
	"conditions": {
		"intent": "statement",
		"verbs":["create"],
		"objects":["event"],
		"match":["$EventName <- graph_data['quote']",
		         "$Date <- graph_data['date'][0]",
		         "$TimeStart <- graph_data['time'][0]",
		         "$TimeEnd <- graph_data['time'][1]"
		
		]
	},
	"action": ["$Node <- Node(main_graph,{'type':'event','name':'$EventName','date':'$Date','start_time':'$TimeStart','end_time':'$TimeEnd'})","$ID <- action_vars['$Node']['id']"],
	"answer": "New event $EventName  created with id = $ID , with date $Date , starting on $TimeStart and ending $TimeEnd"

},

{       "comment":"set owner 'John Smith' for event with id  5",
	"conditions": {
		"intent": "statement",
		"verbs":["set"],
		"objects":["owner","event"],
		"match":["$ID <- graph_data['number']","$OwnerName <- graph_data['quote']"]

		
	},
	"action": ["$EventNode <- main_graph.Match({'type':'event','id':'$ID'})[0]",
	
	           "$OwnerNode <- main_graph.Match({'type':'owner','name':'$OwnerName'})[0]",
	           "$EventName <- action_vars['$EventNode']['name']",
	           "main_graph.AddEdge(action_vars['$EventNode'],action_vars['$OwnerNode'])"],
	           
	"answer": "Ok, event with name $EventName is now owned by $OwnerName , $ID "

},

{       "comment":"set place 'Best place' for event with id  2",
	"conditions": {
		"intent": "statement",
		"verbs":["set"],
		"objects":["place","event"],
		"match":["$ID <- graph_data['number']","$PlaceName <- graph_data['quote']"]

		
	},
	"action": ["$EventNode <- main_graph.Match({'type':'event','id':'$ID'})[0]",
	
	           "$PlaceNode <- main_graph.Match({'type':'place','name':'$PlaceName'})[0]",
	           "$EventName <- action_vars['$EventNode']['name']",
	           "main_graph.AddEdge(action_vars['$EventNode'],action_vars['$PlaceNode'])"],
	           
	"answer": "Ok, event with name $EventName is located at $PlaceName "

},

{       "comment":"show all events with owners and places",
	"conditions": {
		"intent": "statement",
		"verbs":["show"],
		"objects":["owners and places","events"]
		
	},
	"action": ["$Events <- main_graph.Match({'type':'event'}).Match(lambda x: (x.children({'type':'owner'}).NotEmpty()) and (x.children({'type':'place'}).NotEmpty())   )",
	 "$List <- '\\n'.join([x['id'] + ' ' + x['name'] + ' ' + (x.child({'type':'owner'}))['name'] + ' ' + (x.child({'type':'place'}))['name'] for x in action_vars['$Events']])"
	         
	
	            ],
	           
	"answer": "I know following events that have owners and places: \n $List"

},

{       "comment":"show all events with owners",
	"conditions": {
		"intent": "statement",
		"verbs":["show"],
		"objects":["owners","events"]
		
	},
	"action": ["$Events <- main_graph.Match({'type':'event'}).Match(lambda x: x.children({'type':'owner'}).NotEmpty())",
	 "$List <- '\\n'.join([x['id'] + ' ' + x['name'] + ' ' + (x.child({'type':'owner'}))['name'] for x in action_vars['$Events']])"
	         
	
	            ],
	           
	"answer": "I know following events that have owners: \n $List"

},





{       "comment":"create new place named 'The best place'",
	"conditions": {
		"intent": "statement",
		"verbs":["create"],
		"objects":["place"],
		"match":["$PlaceName <- graph_data['quote']"]
	},
	"action": ["$Node <- Node(main_graph,{'type':'place','name':'$PlaceName'})","$ID <- action_vars['$Node']['id']"],
	"answer": "New place $PlaceName created with id = $ID"

},
{
	"comment":"show all event owners'",
	"conditions": {
		"intent": "statement",
		"verbs":["show"],
		"objects":["owners"]
	},
	"action": ["$Owners <- main_graph.Match({'type':'owner'})",
	           "$List <- '\\n'.join([x['id'] + ' ' + x['name'] + ' ' + x['phone'] for x in action_vars['$Owners']])"],
	"answer": "I know following event owners: \n $List"

}
,

{
	"comment":"show all events'",
	"conditions": {
		"intent": "statement",
		"verbs":["show"],
		"objects":["events"]
	},
	"action": ["$Events <- main_graph.Match({'type':'event'})",
	           "$List <- '\\n'.join([x['id'] + ' ' + x['name'] + ' ' + x['date'] for x in action_vars['$Events']])"],
	"answer": "I know following events: \n $List"

},

{
	"comment":"show all places'",
	"conditions": {
		"intent": "statement",
		"verbs":["show"],
		"objects":["places"]
	},
	"action": ["$Events <- main_graph.Match({'type':'place'})",
	           "$List <- '\\n'.join([x['id'] + ' ' + x['name'] for x in action_vars['$Events']])"],
	"answer": "I know following places: \n $List"

},

{
	"conditions": {
		"intent": "question",
		"objects":["name","event","id"],
		"match":["$ID <- graph_data['number']"]
		
	},
	"action" : ["$Name <- main_graph.Match({'type':'event','id':'$ID'}).First()['name']"],
	"answer": "$Name"
},


{
	"conditions": {
		"intent": "question",
		"objects":["name","event","id"],
		"match":["$Name <- graph_data['quote']"]
		
	},
	"action" : ["$Id <- main_graph.Match({'type':'event','name':'$Name'}).First()['id']"],
	"answer": "$Id"
},


{
   "conditions": {
		"pattern": "QB:{<@><a>}",
		"match":["$EventName <- graph_data['quote']",
		         "main_graph.Match({'type':'event','name':action_vars['$EventName']})[0]"]
		
		
	},
	
	"answer": "Thank you for sending feedback for our event $EventName !"
},



{
   "conditions": {
		"pattern": "QB:{<@><a>}"
		
		
		
	},
	
	"answer": "Thank you for feedback. Sorry we don't know this event or place yet."
}










]






